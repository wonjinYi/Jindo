{"version":3,"sources":["components/DoMaker.js","components/Do.js","img/jindodog.png","components/EmptyListNoti.js","components/DoContainer.js","components/PublicBoard.js","components/PrivateBoard.js","components/InfoBoard.js","components/Board.js","components/DoModal.js","components/BoardSelector.js","components/Loading.js","App.js","index.js"],"names":["raro","require","DoMaker","state","name","memo","giveUpdatedFormData","nameValidation","length","memoValidation","props","boardType","updateFormData","this","isDisabled","DoMakerWrap","className","BrownBorderTextField","disabled","value","onChange","e","setState","target","id","label","variant","margin","TextValidator","DooButton","onClick","disableElevation","React","Component","withStyles","root","color","borderColor","TextField","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","Button","styled","div","p","Do","giveModalInfo","setModalInfo","DoWrap","DoName","slice","DoMemo","fontWeight","EmptyListNoti","src","jindodog","height","alt","DoContainer","doList","DoContainerWrap","children","i","push","PublicBoard","PrivateBoard","useState","islogin","setIslogin","useEffect","a","updateIslogin","res","update","PrivateBoardWrap","Tooltip","title","placement","IconButton","Axios","get","withCredentials","handleLogout","href","data","infoBoard","Board","BoardWrap","useStyles","makeStyles","theme","paper","position","maxWidth","shadows","spacing","SimpleModal","modalOpened","handleClose","deleteDo","updatedAt","classes","editmode","setEditmode","modalName","setModalName","modalMemo","setModalMemo","parsedUpdatedAt","substring","viewBody","ModalBody","ContentWrap","Name","Memo","Menu","editBody","fullWidth","multiline","memoVliadation","Modal","open","onClose","boardTypeDefine","IconLabelTabs","updateBoardType","localStorage","getItem","parseInt","initBoardType","setValue","BoardSelectorWrap","SelectTabs","newValue","setItem","aria-label","SelectTab","icon","flexGrow","borderRadius","indicator","Tabs","transition","selected","Tab","backdrop","zIndex","drawer","Loading","Backdrop","CircularProgress","App","isLoading","formData","modalData","modalId","openModal","closeModal","formName","formMemo","updateType","createDo","editDo","type","getDo","findDoById","targetIndex","findIndex","el","axios","post","AppWrap","Title","targetDo","Credit","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c50a5e8b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst raro = require(\"raro-number\"); // 53\n\n\nexport default class DoMaker extends React.Component { // updateFormData, boardType\n\tstate = {\n\t\tname: \"\",\n\t\tmemo: \"\",\n\t};\n\n\tgiveUpdatedFormData = () => {\n\n\t\tconst { name, memo } = this.state;\n\n\t\tconst nameValidation = (name.length > 0 && name.length <= raro) ? true : false;\n\t\tconst memoValidation = (memo.length > 0 && memo.length <= raro * 10) ? true : false;\n\n\t\tif ((nameValidation || this.props.boardType === \"private\") && memoValidation) {\n\t\t\tthis.props.updateFormData(name, memo, \"create\");\n\t\t}\n\t};\n\n\trender() {\n\n\t\tconst { name, memo } = this.state;\n\t\tconst isDisabled = ((this.props.boardType === \"private\") ? true : false);\n\n\t\treturn (\n\t\t\t<DoMakerWrap className=\"DoMaker\">\n\t\t\t\t<BrownBorderTextField\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\tvalue={name} onChange={(e) => { this.setState({ name: e.target.value }); }}\n\t\t\t\t\tid=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\"\n\t\t\t\t/>\n\t\t\t\t<TextValidator>{(name.length > (raro)) ? \"↑ 53 Characters or less\" : \"\"}</TextValidator>\n\t\t\t\t<BrownBorderTextField value={memo} onChange={(e) => { this.setState({ memo: e.target.value }); }}\n\t\t\t\t\tid=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\"\n\t\t\t\t/>\n\t\t\t\t<TextValidator>{(memo.length > (raro * 10)) ? \"↑ 530 Characters or less\" : \"\"}</TextValidator>\n\t\t\t\t<DooButton onClick={this.giveUpdatedFormData} variant=\"contained\" disableElevation><AddCircleOutlineIcon /></DooButton>\n\t\t\t</DoMakerWrap>\n\n\t\t);\n\t}\n}\n\nconst BrownBorderTextField = withStyles({\n\troot: {\n\t\tmargin: '10px 0 0 0',\n\t\t'& label': {\n\t\t\tcolor: '#fca652',\n\t\t},\n\t\t'& label.Mui-focused': {\n\t\t\tcolor: '#fca652',\n\t\t},\n\t\t'& .MuiOutlinedInput-root': {\n\t\t\t'& fieldset': {\n\t\t\t\tborderColor: '#fca652',\n\t\t\t},\n\t\t\t'&:hover fieldset': {\n\t\t\t\tborderColor: '#fca652',\n\t\t\t},\n\t\t\t'&.Mui-focused fieldset': {\n\t\t\t\tborderColor: '#fca652',\n\t\t\t},\n\t\t},\n\t},\n})(TextField);\n\nconst DooButton = withStyles({\n\troot: {\n\t\tmargin: '10px 0 0 0',\n\t\tboxShadow: 'none',\n\t\ttextTransform: 'none',\n\t\tfontSize: '1.5em',\n\t\tpadding: '6px 0',\n\t\tborder: 'none',\n\t\tlineHeight: 1.5,\n\t\tcolor: 'white',\n\t\tbackgroundColor: '#fca652',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#e0944a',\n\t\t\tboxShadow: 'none',\n\t\t},\n\t\t'&:active': {\n\t\t\tboxShadow: 'none',\n\t\t\tbackgroundColor: '#e0944a',\n\t\t},\n\t},\n})(Button);\n\n//styled-component.\nconst DoMakerWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-contents : center;\n  \n  padding : 0 10px 10px 10px;\n  border-radius : 5px;\n\n  background : #ffefa0;\n  `;\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default class Do extends React.Component {\n\n    state = {\n        giveModalInfo : () => {\n            const { id } = this.props;\n            this.props.setModalInfo(id);\n        }\n    }\n    \n\n    render() {\n        const { name, memo } = this.props;\n\n        return (\n            <DoWrap className=\"Do\">\n                <DoName>{ \n                    (name.length < 20)\n                    ? name\n                    : name.slice(0,20)+ \"...\"\n                }</DoName>\n                <DoMemo variant=\"outlined\" onClick={this.state.giveModalInfo}>{ \n                    (memo.length < 30)\n                        ? memo\n                        : memo.slice(0,30)+ \"...\"\n                }</DoMemo>\n     \n                \n            </DoWrap>\n        );\n    }\n}\n\nconst DoWrap = styled.div`\n    display : flex;\n    `;\n\nconst DoName = withStyles({\n    root: {\n        textTransform: 'none',\n        //overflowWrap: 'break-word',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        fontWeight : 'bold',\n        color : '#4a4a4a',\n        backgroundColor: '#FFD57E',\n        '&:hover': {\n            backgroundColor: '#e3bc6b',\n        },\n        '&:active': {\n            backgroundColor: '#e3bc6b',\n        },\n    },\n})(Button);\n\nconst DoMemo = withStyles({\n    root: {\n\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        //overflowWrap: 'break-word',\n        color : '#4a4a4a',\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#ededed',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#ededed',\n        },\n    },\n})(Button);","export default __webpack_public_path__ + \"static/media/jindodog.c390091a.png\";","import React from 'react';\nimport jindodog from '../img/jindodog.png';\n\nexport default function EmptyListNoti() {\n\n    return (\n        <div className=\"EmptyListNoti\">\n            <img src={jindodog} height=\"300\"alt=\"jindo dog\" />\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n//components\nimport Do from \"./Do\";\nimport EmptyListNoti from \"./EmptyListNoti\";\n\nexport default function DoContainer({setModalInfo, doList}) {\n\n\n    return (\n        <DoContainerWrap>\n        {\n            doList.length > 0\n                ?   (() => {\n                        const children = [];\n                        for (let i = doList.length - 1; i >= 0; i--) {\n                            children.push(<Do key={i} id={doList[i].id} setModalInfo={setModalInfo} name={doList[i].name} memo={doList[i].memo} />);\n                        }\n                        return children;\n                    })()\n                :   <EmptyListNoti />\n        }\n        </DoContainerWrap>\n    );\n}\n\nconst DoContainerWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    `;","// library, frameworks.\nimport React from \"react\";\n//import styled from \"styled-components\";\n\nimport DoContainer from \"./DoContainer\";\n\nexport default function PublicBoard({setModalInfo, doList}) {\n\n    return (\n        <div className=\"PublicBoard\">\n            <DoContainer setModalInfo={setModalInfo} doList={doList} />\n        </div>\n        \n    );\n}\n","// library, frameworks.\nimport Axios from \"axios\";\nimport { React, useEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n// components.\nimport DoContainer from \"./DoContainer\";\nimport EmptyListNoti from \"./EmptyListNoti\";\n\nexport default function PrivateBoard({ setModalInfo, doList }) {\n\n    const [islogin, setIslogin] = useState(0);\n    useEffect( () => {\n        async function update() {\n            const res = await updateIslogin();\n            setIslogin(res);\n        }\n        update();\n    }, [islogin]);\n\n    return (\n        <div className=\"PrivateBoard\">\n            {\n                (() => {\n                    if ( islogin === true ){\n                        return (\n                            <PrivateBoardWrap>\n                                <Tooltip title=\"Logout\" placement=\"left\">\n                                    <IconButton onClick={ () => { handleLogout(setIslogin) }}><ExitToAppIcon /></IconButton>\n                                </Tooltip>\n                                <DoContainer setModalInfo={setModalInfo} doList={doList} />\n                            </PrivateBoardWrap>\n                        );\n                    } else if ( islogin === false ) {\n                        return (\n                            <PrivateBoardWrap>\n                                <a href=\"https://jindoback.wonj.in/login/daldalso\">\n                                    <img src=\"https://daldal.so/media/images/oauth-button.png\" alt=\"daldalso-Login\" />\n                                </a>\n                            </PrivateBoardWrap>\n                        );\n                    } else {\n                        return (<EmptyListNoti />);\n                    }\n                })()\n            }\n\n        </div>\n\n    );\n}\n\nasync function updateIslogin() {\n    const { data } = await Axios.get('https://jindoback.wonj.in/islogin', {withCredentials : true})\n    return data;\n}\n\nfunction handleLogout(setIslogin) {\n    Axios.get('https://jindoback.wonj.in/logout', {withCredentials : true});\n    setIslogin(false);\n}\n\nconst PrivateBoardWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    `;","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n\nexport default function infoBoard() {\n\n    return (\n        <div className=\"InfoBoard\">\n            INFO BOARD\n        </div>\n    );\n}\n","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport PublicBoard from \"./PublicBoard\";\nimport PrivateBoard from \"./PrivateBoard\";\nimport InfoBoard from \"./InfoBoard\";\n\n//import DoContainer from \"./DoContainer\";\n\nexport default function Board({setModalInfo, doList, boardType}) {\n\n    return (\n        <BoardWrap className=\"Board\">\n            {\n                (() => {\n                    if(boardType === \"public\"){\n                        return ( <PublicBoard setModalInfo={setModalInfo} doList={doList} /> );\n                    }  \n                    else if(boardType === \"private\"){\n                        return ( <PrivateBoard setModalInfo={setModalInfo} doList={doList} /> );\n                    }\n                    else if(boardType === \"info\"){\n                        return ( <InfoBoard /> );\n                    }\n\n                })()\n            }\n        </BoardWrap>\n        \n    );\n}\n\nconst BoardWrap = styled.div`\n    padding : 10px;\n    margin : 30px 0; \n    border-radius : 5px;\n\n    background : #ffefa0;\n    `;","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { makeStyles, TextField, withStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst raro = require(\"raro-number\"); // 53\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: '80%',\n    backgroundColor : 'rgba(255,255,255,0.8)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst giveUpdatedFormData = (setEditmode, updateFormData, id, modalName, modalMemo) => {\n    const nameValidation = ( modalName.length > 0 && modalName.length <= raro ) ? true : false ;\n    const memoVliadation = ( modalMemo.length > 0 && modalMemo.length <= raro*10 ) ? true : false ;\n\n    if(nameValidation && memoVliadation) {\n        updateFormData( modalName, modalMemo, \"edit\", id);\n        setEditmode(false);\n    } \n}\n\nexport default function SimpleModal({modalOpened, handleClose, deleteDo, updateFormData, boardType, id, name, memo, updatedAt}) {\n    const classes = useStyles();\n    \n    const [editmode, setEditmode] = useState(false);\n    const [modalName, setModalName] = useState(name);\n    const [modalMemo, setModalMemo] = useState(memo);\n\n    useEffect( () => { setModalName(name) }, [name])\n    useEffect( () => { setModalMemo(memo) }, [memo])\n\n    const parsedUpdatedAt = updatedAt.substring(0,10) + ' ' + updatedAt.substring(11,16);\n    const isDisabled = ((boardType === \"private\") ? true : false);\n\n    const viewBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <p>{ parsedUpdatedAt }</p>\n                <Name>{ modalName }</Name>\n                <Memo>{ modalMemo }</Memo>\n            </ContentWrap>  \n             \n            <Menu>\n                <IconButton onClick={ () => setEditmode(true) }><EditIcon /></IconButton>\n                <IconButton onClick={deleteDo}><DeleteForeverIcon /></IconButton>\n            </Menu>\n        </ModalBody>\n    );\n\n    const editBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <BrownBorderTextField \n                    disabled={isDisabled}\n                    value={modalName} onChange={ (e) => { setModalName(e.target.value) } } \n                    id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" fullWidth\n                />\n                <TextValidator>{ ( modalName.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n                <BrownBorderTextField value={modalMemo} onChange={ (e) => { setModalMemo(e.target.value) } }\n                    id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" multiline fullWidth\n                />\n                <TextValidator>{ ( modalMemo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n            </ContentWrap>  \n            \n            <Menu>\n                <IconButton onClick={ () => { giveUpdatedFormData(setEditmode, updateFormData, id, modalName, modalMemo) } }><CheckCircleOutlineIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); } }><HighlightOffIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); deleteDo(); } }>\n                    <DeleteForeverIcon />\n                </IconButton>\n            </Menu>\n        </ModalBody>\n    )\n\n    return (\n        <div className=\"SimpleModal\">\n            <Modal open={modalOpened} onClose={ () => { setEditmode(false); handleClose(); } }>\n            {\n                editmode\n                ? editBody\n                : viewBody\n            }\n            </Modal>\n        </div>\n    );\n}\n\n\n\nconst ModalBody = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    top : 50%;\n    left : 50%;\n    transform : translate(-50%, -50%);\n\n    min-width : 70%;\n\n    `;\n\nconst ContentWrap = styled.div`\n    width : 100%;\n    max-width : 100%;\n    \n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    align-items : center;\n    `;\nconst Name = styled.p`\n    padding : 10px;\n    \n    text-align : center;\n\n    background : #FFD57E;\n    border-radius : 5px;\n    color : #4a4a4a;\n    font-weight : bold\n    `;\n\nconst Memo = styled.p`\n    background : #FFFFFF;\n    color : #4a4a4a;\n    padding : 10px;\n    border-radius : 5px;\n    word-break: break-all;\n    overflow-wrap: break-word; \n    `;\n\nconst Menu = styled.div`\n    display : flex;\n    `;\n\n\nconst BrownBorderTextField  = withStyles({\n    root: {\n        \n        margin : '16px 0',\n        '& label' : {\n            color : '#fca652',\n        },\n        '& label.Mui-focused': {\n            color: '#fca652',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: '#fca652',\n            },\n            '&:hover fieldset': {\n            borderColor: '#fca652',\n            },\n            '&.Mui-focused fieldset': {\n            borderColor: '#fca652',\n            },\n        },\n    },\n})(TextField);\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React, { useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PublicIcon from '@material-ui/icons/Public';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst boardTypeDefine = ['public', 'private', 'info'];\n\nexport default function IconLabelTabs({updateBoardType}) {\n  \n  const [value, setValue] = React.useState( initBoardType() );\n  \n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n    localStorage.setItem('boardType', newValue)\n  };\n\n  useEffect( () => {\n    updateBoardType(boardTypeDefine[value]);\n  }, [value, updateBoardType]);\n  \n\n  return (\n    <BoardSelectorWrap>\n        <SelectTabs\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          aria-label=\"board selector\"\n        >\n          <SelectTab icon={<PublicIcon />} label=\"Public\" />\n          <SelectTab icon={<AccountCircleIcon />} label=\"Private\" />\n          <SelectTab icon={<InfoIcon />} label=\"Info\" />\n        </SelectTabs>\n    </BoardSelectorWrap>\n  );\n}\n\nfunction initBoardType () {\n  const boardType = localStorage.getItem('boardType');\n  // console.log('init : ', boardType);\n\n  if ( boardType ) {\n    return parseInt(boardType);\n  } else {\n    return 0; // public\n  }\n}\n\n\n// style\nconst BoardSelectorWrap = styled.div`\n  margin-bottom : 30px;\n  `;\n\nconst SelectTabs = withStyles({\n  root: {\n    flexGrow : 1,\n    maxWidth : 500,\n    backgroundColor : '#FFEFA0',\n    borderRadius : '10px',\n  },\n  indicator : {\n    backgroundColor : '#FCA652',\n  }\n})(Tabs);\n\nconst SelectTab = withStyles({\n  root: {\n    color : '#4A4A4A',\n    backgroundColor : '#FFEFA0',\n    transition : 'background-color 1s',\n  },\n  disabled : {\n  },\n  selected : {\n    backgroundColor: '#FCA652',\n  },\n})(Tab);","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"Loading\">\n            <Backdrop className={classes.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />  \n            </Backdrop>\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\n// components\n\nimport DoMaker from \"./components/DoMaker\";\nimport Board from \"./components/Board\";\nimport DoModal from \"./components/DoModal\";\nimport BoardSelector from \"./components/BoardSelector\";\n\n\nimport Loading from \"./components/Loading\";\n\n\n// 'App' COMPONENT\nexport default class App extends React.Component {\n\n    state = {\n        isLoading: true,\n\n        formData: {\n            name: \"\",\n            memo: \"\",\n        },\n\n        modalData: {\n            modalId: 0,\n            modalOpened: false,\n        },\n\n        boardType : null, // public, private, info\n        doList : [],\n    };\n\n    openModal = (id) => {\n        this.setState({\n            modalData: {\n                modalId: id,\n                modalOpened: true,\n            }\n        });\n    };\n\n    closeModal = () => {\n        this.setState({\n            modalData: {\n                modalId: 0,\n                modalOpened: false,\n            }\n        });\n    };\n\n    updateFormData = (formName, formMemo, updateType, id) => {\n        this.setState({ isLoading: true });\n\n        if (updateType === \"create\") {\n            this.setState(() => ({\n                formData: {\n                    name: formName,\n                    memo: formMemo,\n                }\n            }), this.createDo);\n        }\n        else if (updateType === \"edit\") {\n            this.setState({\n                modalData: {\n                    modalId: id,\n                    modalOpened: true,\n                },\n            }, () => this.editDo(id, formName, formMemo ) );\n        }\n    }\n\n    updateBoardType = (type) => {\n        this.setState({ boardType : type });\n        //console.log(\"boardtype : \", type);\n\n        this.setState({ \n            isLoading: true \n        }, this.getDo);\n    }\n    \n    findDoById = (modalId) => {\n        const { doList } = this.state;\n\n        const isTarget = (el) => el.id === modalId;\n        const targetIndex = doList.findIndex(isTarget);\n\n        if ( targetIndex !== -1 ){\n            const targetDo = doList[targetIndex]\n            return targetDo;\n        } else {\n            const targetDo = {\n                id : 'error',\n                name : 'error',\n                memo : 'error',\n                updatedAt : 'error',\n            };\n            return targetDo;\n        }\n    }\n\n    // API request\n    getDo = async () => {\n        const { boardType } = this.state;\n        if( boardType === null ){\n            return 0;\n        }\n\n        const { data } = await axios.get(`https://jindoback.wonj.in/${boardType}/read`, { withCredentials: true })\n        //console.log(data);\n        if(data==='error'){ \n            this.setState({ isLoading : false });\n            return 0; \n        }\n\n        this.setState({\n            doList: data,\n            isLoading: false,\n        });\n    }\n\n    createDo = async () => {\n        const { formData, boardType } = this.state;\n        await axios.post(`https://jindoback.wonj.in/${boardType}/create`, formData, {withCredentials : true});\n        await this.getDo();\n    }\n\n    editDo = async (id, name, memo) => {\n        const { boardType } = this.state;\n\n        const modalData = {\n            id,\n            name,\n            memo,\n        };\n        \n        await axios.post(`https://jindoback.wonj.in/${boardType}/edit`, modalData, {withCredentials : true});\n\n        await this.getDo();\n    }\n\n    deleteDo = async () => {\n        const { modalData: {\n            modalId\n        }, boardType } = this.state;\n\n        this.closeModal();\n        this.setState({\n            isLoading: true,\n        });\n        await axios.post(`https://jindoback.wonj.in/${boardType}/delete`, { id: modalId }, {withCredentials : true});\n\n        await this.getDo();\n    }\n\n\n    componentDidMount() {\n        this.getDo();\n    }\n\n\n    render() {\n        const { isLoading, doList, boardType, modalData: { modalId, modalOpened } } = this.state;\n\n        return (\n            <AppWrap className=\"App\">\n                <Title className=\"title\">Jindo</Title>\n\n                <BoardSelector updateBoardType={this.updateBoardType} />\n\n                <DoMaker updateFormData={this.updateFormData} boardType={boardType} />\n\n                <Board setModalInfo={this.openModal} doList={doList} boardType={boardType}/>\n                \n                {\n                    (() => {\n                        if ( modalOpened ){\n                            const targetDo = this.findDoById(modalId);\n                            return (\n                                <DoModal    modalOpened={modalOpened} handleClose={this.closeModal} deleteDo={this.deleteDo} updateFormData={this.updateFormData} boardType={boardType}\n                                            id={targetDo.id} name={targetDo.name} memo={targetDo.memo} updatedAt={targetDo.updatedAt}\n                                />\n                            );\n                        }\n                    })()\n                }\n                \n\n                <Credit>Wonjin Yi</Credit>\n\n\n                { isLoading\n                    ? <Loading /> \n                    : ''\n                }\n\n            </AppWrap>\n        );\n    }\n}\n\n// styled components\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n    `;\n\nconst Title = styled.h1`\n    font-size: 5em;\n    text-align: center;\n\n    padding : 20px;\n    border-radius : 5px;\n    background: #fca652;\n    color: #ac4b1c;\n    `;\n\nconst Credit = styled.p`\n    font-size : 1em;\n    color : #fca652;\n    `;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}