{"version":3,"sources":["components/Do.js","components/DoMaker.js","components/DoModal.js","components/BoardSelector.js","components/Loading.js","img/jindodog.png","components/EmptyListNoti.js","App.js","index.js"],"names":["Do","state","giveModalInfo","id","props","setModalInfo","this","name","memo","DoWrap","className","DoName","length","slice","DoMemo","variant","onClick","React","Component","styled","div","withStyles","root","textTransform","margin","border","padding","fontWeight","color","backgroundColor","Button","boxShadow","raro","require","DoMaker","giveUpdatedFormData","nameValidation","memoVliadation","updateFormData","console","log","DoMakerWrap","BrownBorderTextField","value","onChange","e","setState","target","label","defaultValue","TextValidator","DooButton","disableElevation","borderColor","TextField","fontSize","lineHeight","p","useStyles","makeStyles","theme","paper","position","maxWidth","shadows","spacing","SimpleModal","modalOpened","handleClose","deleteDo","updatedAt","classes","useState","editmode","setEditmode","modalName","setModalName","modalMemo","setModalMemo","useEffect","parsedUpdatedAt","substring","viewBody","ModalBody","ContentWrap","Name","Memo","Menu","IconButton","editBody","fullWidth","multiline","Modal","open","onClose","flexGrow","backdrop","zIndex","drawer","Loading","Backdrop","CircularProgress","EmptyListNoti","src","jindodog","height","alt","App","isLoading","formData","modalData","modalId","doList","openModal","closeModal","formName","formMemo","updateType","createDo","editDo","findDoById","targetIndex","findIndex","el","getDo","a","axios","get","data","post","targetDo","AppWrap","Title","DoContainer","children","i","push","Credit","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a0133a6.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default class Do extends React.Component {\n\n    state = {\n        giveModalInfo : () => {\n            const { id } = this.props;\n            this.props.setModalInfo(id);\n        }\n    }\n    \n\n    render() {\n        const { name, memo } = this.props;\n\n        return (\n            <DoWrap className=\"Do\">\n                <DoName>{ \n                    (name.length < 20)\n                    ? name\n                    : name.slice(0,20)+ \"...\"\n                }</DoName>\n                <DoMemo variant=\"outlined\" onClick={this.state.giveModalInfo}>{ \n                    (memo.length < 30)\n                        ? memo\n                        : memo.slice(0,30)+ \"...\"\n                }</DoMemo>\n     \n                \n            </DoWrap>\n        );\n    }\n}\n\nconst DoWrap = styled.div`\n    display : flex;\n    `;\n\nconst DoName = withStyles({\n    root: {\n        textTransform: 'none',\n        //overflowWrap: 'break-word',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        fontWeight : 'bold',\n        color : '#4a4a4a',\n        backgroundColor: '#FFD57E',\n        '&:hover': {\n            backgroundColor: '#e3bc6b',\n        },\n        '&:active': {\n            backgroundColor: '#e3bc6b',\n        },\n    },\n})(Button);\n\nconst DoMemo = withStyles({\n    root: {\n\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        //overflowWrap: 'break-word',\n        color : '#4a4a4a',\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#ededed',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#ededed',\n        },\n    },\n})(Button);","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst raro = require(\"raro-number\"); // 53\n\n\nexport default class DoMaker extends React.Component {\n  state = {\n    name : \"\",\n    memo : \"\",\n  };\n\n\n\n  giveUpdatedFormData = () => {\n    \n      const { name, memo } = this.state;\n\n      const nameValidation = ( name.length > 0 && name.length <= raro ) ? true : false ;\n      const memoVliadation = ( memo.length > 0 && memo.length <= raro*10 ) ? true : false ;\n\n      if(nameValidation && memoVliadation) {\n        this.props.updateFormData( name, memo, \"create\" );\n      }\n  };\n\n\n  render() {\n      \n      const { name, memo } = this.state;\n      console.log(name.length, memo.length);\n      return (\n          <DoMakerWrap className=\"DoMaker\">\n              <BrownBorderTextField value={name} onChange={ (e) => {this.setState( {name:e.target.value} );} } \n                id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" defaultValue=\"WHO\"\n              />\n              <TextValidator>{ ( name.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n              <BrownBorderTextField value={memo} onChange={ (e) => {this.setState( {memo:e.target.value} );} }\n                id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" defaultValue=\"WHAT\"\n              />\n              <TextValidator>{ ( memo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n              <DooButton onClick={this.giveUpdatedFormData} variant=\"contained\" disableElevation><AddCircleOutlineIcon /></DooButton>\n          </DoMakerWrap>\n          \n      );\n  }\n}\n\nconst BrownBorderTextField  = withStyles({\n  root: {\n      margin : '10px 0 0 0',\n      '& label' : {\n          color : '#fca652',\n      },\n      '& label.Mui-focused': {\n          color: '#fca652',\n      },\n      '& .MuiOutlinedInput-root': {\n          '& fieldset': {\n          borderColor: '#fca652',\n          },\n          '&:hover fieldset': {\n          borderColor: '#fca652',\n          },\n          '&.Mui-focused fieldset': {\n          borderColor: '#fca652',\n          },\n      },\n  },\n})(TextField);\n\nconst DooButton = withStyles({\nroot: {\n  margin : '10px 0 0 0',\n  boxShadow: 'none',\n  textTransform: 'none',\n  fontSize: '1.5em',\n  padding: '6px 0',\n  border: 'none',\n  lineHeight: 1.5,\n  color : 'white',\n  backgroundColor: '#fca652',\n  '&:hover': {\n    backgroundColor: '#e0944a',\n    //borderColor: '#0062cc',\n    boxShadow: 'none',\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: '#e0944a',\n    //borderColor: '#005cbf',\n  },\n},\n})(Button);\n\n//styled-component.\nconst DoMakerWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-contents : center;\n  \n  padding : 10px;\n  border-radius : 5px;\n\n  background : #ffefa0;\n  `;\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { makeStyles, TextField, withStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst raro = require(\"raro-number\"); // 53\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: '80%',\n    backgroundColor : 'rgba(255,255,255,0.8)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst giveUpdatedFormData = (setEditmode, updateFormData, id, modalName, modalMemo) => {\n    const nameValidation = ( modalName.length > 0 && modalName.length <= raro ) ? true : false ;\n    const memoVliadation = ( modalMemo.length > 0 && modalMemo.length <= raro*10 ) ? true : false ;\n\n    if(nameValidation && memoVliadation) {\n        updateFormData( modalName, modalMemo, \"edit\", id);\n        setEditmode(false);\n    } \n}\n\nexport default function SimpleModal({modalOpened, handleClose, deleteDo, updateFormData, id, name, memo, updatedAt}) {\n    const classes = useStyles();\n    \n    const [editmode, setEditmode] = useState(false);\n    const [modalName, setModalName] = useState(name);\n    const [modalMemo, setModalMemo] = useState(memo);\n\n    useEffect( () => { setModalName(name) }, [name])\n    useEffect( () => { setModalMemo(memo) }, [memo])\n\n\n    const parsedUpdatedAt = updatedAt.substring(0,10) + ' ' + updatedAt.substring(11,16);\n\n    const viewBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <p>{ parsedUpdatedAt }</p>\n                <Name>{ modalName }</Name>\n                <Memo>{ modalMemo }</Memo>\n            </ContentWrap>  \n             \n            <Menu>\n                <IconButton onClick={ () => setEditmode(true) }><EditIcon /></IconButton>\n                <IconButton onClick={deleteDo}><DeleteForeverIcon /></IconButton>\n            </Menu>\n        </ModalBody>\n    );\n\n    const editBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <BrownBorderTextField value={modalName} onChange={ (e) => { setModalName(e.target.value) } } \n                    id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" fullWidth\n                />\n                <TextValidator>{ ( modalName.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n                <BrownBorderTextField value={modalMemo} onChange={ (e) => { setModalMemo(e.target.value) } }\n                    id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" multiline fullWidth\n                />\n                <TextValidator>{ ( modalMemo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n            </ContentWrap>  \n            \n            <Menu>\n                <IconButton onClick={ () => { giveUpdatedFormData(setEditmode, updateFormData, id, modalName, modalMemo) } }><CheckCircleOutlineIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); } }><HighlightOffIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); deleteDo(); } }>\n                    <DeleteForeverIcon />\n                </IconButton>\n            </Menu>\n        </ModalBody>\n    )\n\n    return (\n        <div className=\"SimpleModal\">\n            <Modal open={modalOpened} onClose={ () => { setEditmode(false); handleClose(); } }>\n            {\n                editmode\n                ? editBody\n                : viewBody\n            }\n            </Modal>\n        </div>\n    );\n}\n\n\n\nconst ModalBody = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    top : 50%;\n    left : 50%;\n    transform : translate(-50%, -50%);\n\n    min-width : 70%;\n\n    `;\n\nconst ContentWrap = styled.div`\n    width : 100%;\n    max-width : 100%;\n    \n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    align-items : center;\n    `;\nconst Name = styled.p`\n    padding : 10px;\n    \n    text-align : center;\n\n    background : #FFD57E;\n    border-radius : 5px;\n    color : #4a4a4a;\n    font-weight : bold\n    `;\n\nconst Memo = styled.p`\n    background : #FFFFFF;\n    color : #4a4a4a;\n    padding : 10px;\n    border-radius : 5px;\n    word-break: break-all;\n    overflow-wrap: break-word; \n    `;\n\nconst Menu = styled.div`\n    display : flex;\n    `;\n\n\nconst BrownBorderTextField  = withStyles({\n    root: {\n        \n        margin : '16px 0',\n        '& label' : {\n            color : '#fca652',\n        },\n        '& label.Mui-focused': {\n            color: '#fca652',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: '#fca652',\n            },\n            '&:hover fieldset': {\n            borderColor: '#fca652',\n            },\n            '&.Mui-focused fieldset': {\n            borderColor: '#fca652',\n            },\n        },\n    },\n})(TextField);\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 500,\n  },\n});\n\nexport default function IconLabelTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper square className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        aria-label=\"icon label tabs example\"\n      >\n        <Tab icon={<PhoneIcon />} label=\"RECENTS\" />\n        <Tab icon={<FavoriteIcon />} label=\"FAVORITES\" />\n        <Tab icon={<PersonPinIcon />} label=\"NEARBY\" />\n      </Tabs>\n    </Paper>\n  );\n}\n\n//https://material-ui.com/components/tabs/","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"Loading\">\n            <Backdrop className={classes.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />  \n            </Backdrop>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/jindodog.c390091a.png\";","import React from 'react';\nimport jindodog from '../img/jindodog.png';\n\nexport default function EmptyListNoti() {\n\n    return (\n        <div className=\"EmptyListNoti\">\n            <img src={jindodog} height=\"300\"alt=\"jindo dog\" />\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\n// components\nimport Do from \"./components/Do\";\nimport DoMaker from \"./components/DoMaker\";\nimport DoModal from \"./components/DoModal\";\nimport BoardSelector from \"./components/BoardSelector\";\n\nimport Loading from \"./components/Loading\";\nimport EmptyListNoti from \"./components/EmptyListNoti\";\n\n// 'App' COMPONENT\nexport default class App extends React.Component {\n\n    state = {\n        isLoading: true,\n\n        formData: {\n            name: \"\",\n            memo: \"\",\n        },\n\n        modalData: {\n            modalId: 0,\n            modalOpened: false,\n        },\n\n        doList: [],\n    };\n\n    openModal = (id) => {\n        this.setState({\n            modalData: {\n                modalId: id,\n                modalOpened: true,\n            }\n        });\n    };\n\n    closeModal = () => {\n        this.setState({\n            modalData: {\n                modalId: 0,\n                modalOpened: false,\n            }\n        });\n    };\n\n    updateFormData = (formName, formMemo, updateType, id) => {\n        this.setState({ isLoading: true });\n\n        if (updateType === \"create\") {\n            this.setState(() => ({\n                formData: {\n                    name: formName,\n                    memo: formMemo,\n                }\n            }), this.createDo);\n        }\n        else if (updateType === \"edit\") {\n            this.setState({\n                modalData: {\n                    modalId: id,\n                    modalOpened: true,\n                },\n            }, () => this.editDo(id, formName, formMemo ) );\n        }\n    }\n\n    findDoById = (modalId) => {\n        const { doList } = this.state;\n\n        const isTarget = (el) => el.id == modalId;\n        const targetIndex = doList.findIndex(isTarget);\n\n        if ( targetIndex != -1 ){\n            const targetDo = doList[targetIndex]\n            return targetDo;\n        } else {\n            const targetDo = {\n                id : 'error',\n                name : 'error',\n                memo : 'error',\n                updatedAt : 'error',\n            };\n            return targetDo;\n        }\n    }\n\n    // API request\n    getDo = async () => {\n        const { data } = await axios.get(\"https://jindoback.wonj.in/public_data\")\n        console.log(data);\n        this.setState({\n            doList: data,\n            isLoading: false,\n        });\n    }\n\n    createDo = async () => {\n        const { formData } = this.state;\n        await axios.post(\"https://jindoback.wonj.in/create\", formData);\n        await this.getDo();\n    }\n\n    editDo = async (id, name, memo) => {\n        const modalData = {\n            id,\n            name,\n            memo,\n        };\n        \n        await axios.post(\"https://jindoback.wonj.in/edit\", modalData);\n\n        await this.getDo();\n    }\n\n    deleteDo = async () => {\n        const { modalData: {\n            modalId\n        } } = this.state;\n\n        this.closeModal();\n        this.setState({\n            isLoading: true,\n        });\n        await axios.post(\"https://jindoback.wonj.in/delete\", { id: modalId });\n\n        await this.getDo();\n    }\n\n\n    componentDidMount() {\n        this.getDo();\n    }\n\n//<BoardSelector />\n    render() {\n        const { isLoading, doList, modalData: { modalId, modalOpened } } = this.state;\n\n        const targetDo = this.findDoById(modalId);\n        console.log('targetDO ',targetDo)\n        \n        return (\n            <AppWrap className=\"App\">\n                <Title className=\"title\">Jindo</Title>\n\n                \n\n                <DoMaker updateFormData={this.updateFormData} />\n\n                <DoContainer>\n                    {\n                        doList.length > 0\n                            ?   (() => {\n                                    const children = [];\n                                    for (let i = doList.length - 1; i >= 0; i--) {\n                                        children.push(<Do key={i} id={doList[i].id} setModalInfo={this.openModal} name={doList[i].name} memo={doList[i].memo} />);\n                                    }\n                                    return children;\n                                })()\n                            :   <EmptyListNoti />\n                    }\n                </DoContainer>\n\n                <DoModal    modalOpened={modalOpened} handleClose={this.closeModal} deleteDo={this.deleteDo} updateFormData={this.updateFormData}\n                            id={targetDo.id} name={targetDo.name} memo={targetDo.memo} updatedAt={targetDo.updatedAt}\n                />\n\n                <Credit>Wonjin Yi</Credit>\n\n\n                { isLoading\n                    ? <Loading /> \n                    : ''\n                }\n\n            </AppWrap>\n        );\n    }\n}\n\n// styled components\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n    `;\n\nconst Title = styled.h1`\n    font-size: 5em;\n    text-align: center;\n\n    padding : 20px;\n    border-radius : 5px;\n    background: #fca652;\n    color: #ac4b1c;\n    `;\n\nconst DoContainer = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    max-width : 50%;\n\n    padding : 10px;\n    margin : 30px 0; \n    border-radius : 5px;\n\n    background : #ffefa0;\n    `;\n\nconst Credit = styled.p`\n    font-size : 1em;\n    color : #fca652;\n    `;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}