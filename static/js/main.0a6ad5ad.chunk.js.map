{"version":3,"sources":["components/Do.js","components/DoMaker.js","components/DoModal.js","App.js","index.js"],"names":["Do","state","giveModalInfo","console","log","props","setModalInfo","name","content","this","DoWrap","className","DoName","DoContent","variant","onClick","length","slice","React","Component","styled","div","withStyles","root","textTransform","margin","border","padding","fontWeight","color","backgroundColor","Button","boxShadow","BrownBorderTextField","borderColor","TextField","DooButton","fontSize","lineHeight","DoMakerWrap","DoMaker","id","label","disableElevation","useStyles","makeStyles","theme","paper","position","maxWidth","shadows","spacing","SimpleModal","modalOpened","handleClose","classes","body","ModalBody","Name","Content","Menu","IconButton","Modal","open","onClose","p","App","modalName","modalContent","doList","handleOpen","setState","prevState","AppWrap","Title","DoContainer","map","el","Credit","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a6ad5ad.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default class Do extends React.Component {\n\n    state = {\n        giveModalInfo : () => {\n            console.log(this.props.setModalInfo);\n            const { name, content } = this.props;\n            this.props.setModalInfo(name, content);\n        }\n    }\n    \n\n    render() {\n        const { name, content } = this.props;\n\n        return (\n            <DoWrap className=\"Do\">\n                <DoName>{ name }</DoName>\n                <DoContent variant=\"outlined\" onClick={this.state.giveModalInfo}>{ \n                    (content.length < 30)\n                        ? content\n                        : content.slice(0,30)+ \"...\"\n                }</DoContent>\n     \n                \n            </DoWrap>\n        );\n    }\n}\n\nconst DoWrap = styled.div`\n    display : flex;\n    `;\n\nconst DoName = withStyles({\n    root: {\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        fontWeight : 'bold',\n        color : '#4a4a4a',\n        backgroundColor: '#FFD57E',\n        '&:hover': {\n            backgroundColor: '#e3bc6b',\n        },\n        '&:active': {\n            backgroundColor: '#e3bc6b',\n        },\n    },\n})(Button);\n\nconst DoContent = withStyles({\n    root: {\n\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n\n        color : '#4a4a4a',\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#ededed',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#ededed',\n        },\n    },\n})(Button);","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n\nconst BrownBorderTextField  = withStyles({\n    root: {\n        margin : '0 0 0.5em 0',\n        '& label' : {\n            color : '#fca652',\n        },\n        '& label.Mui-focused': {\n            color: '#fca652',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: '#fca652',\n            },\n            '&:hover fieldset': {\n            borderColor: '#fca652',\n            },\n            '&.Mui-focused fieldset': {\n            borderColor: '#fca652',\n            },\n        },\n    },\n  })(TextField);\n\nconst DooButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: '1.5em',\n    padding: '6px 0',\n    border: 'none',\n    lineHeight: 1.5,\n    color : 'white',\n    backgroundColor: '#fca652',\n    '&:hover': {\n      backgroundColor: '#e0944a',\n      //borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#e0944a',\n      //borderColor: '#005cbf',\n    },\n  },\n})(Button);\n\n//styled-component.\nconst DoMakerWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    \n    padding : 10px;\n    border-radius : 5px;\n\n    background : #ffefa0;\n    `;\n\nclass DoMaker extends React.Component {\n\n\n    render() {\n        return (\n            <DoMakerWrap className=\"DoMaker\">\n                <BrownBorderTextField id=\"outlined-basic\" label=\"What\" variant=\"outlined\" margin=\"dense\" />\n                <BrownBorderTextField id=\"outlined-basic\" label=\"Who\" variant=\"outlined\" margin=\"dense\" />\n                <DooButton variant=\"contained\" disableElevation><AddCircleOutlineIcon /></DooButton>\n            </DoMakerWrap>\n            \n        );\n    }\n}\n\nexport default DoMaker;","import React from 'react';\nimport styled from \"styled-components\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: '90%',\n    backgroundColor : 'rgba(255,255,255,0.8)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal({modalOpened, handleClose, name, content}) {\n    const classes = useStyles();\n    \n    const body = (\n        \n        <ModalBody className={classes.paper}>\n            <div>\n                <Name>{ name }</Name>\n                <Content>{ content }</Content>\n            </div>\n            <Menu>\n                <IconButton><EditIcon /></IconButton>\n                <IconButton><DeleteForeverIcon /></IconButton>\n            </Menu>\n        </ModalBody>\n    );\n\n    return (\n        <div className=\"SimpleModal\">\n            <Modal open={modalOpened} onClose={handleClose}>\n                {body}\n            </Modal>\n        </div>\n    );\n}\n\nconst ModalBody = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    top : 50%;\n    left : 50%;\n    transform : translate(-50%, -50%);\n    `;\n\nconst Name = styled.p`\n    padding : 10px;\n\n    text-align : center;\n\n    background : #FFD57E;\n    border-radius : 5px;\n    color : #4a4a4a;\n    font-weight : bold\n    `;\n\nconst Content = styled.p`\n    background : #FFFFFF;\n    color : #4a4a4a;\n    padding : 10px;\n    border-radius : 5px;\n    `;\n\nconst Menu = styled.div`\n    display : flex;\n    `;","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// components\nimport Do from \"./components/Do\";\nimport DoMaker from \"./components/DoMaker\";\nimport DoModal from \"./components/DoModal\";\n\n// 'App' COMPONENT\nexport default class App extends React.Component {\n  \n  state = {\n    modalName : '',\n    modalContent : '',\n    modalOpened : false,\n\n    doList : [\n      {\"name\":\"wonjin\", \"content\":\"테스트입니다테스트스트\"},\n      {\"name\":\"wonjin\", \"content\":\"testtttetetsetsetsetset\"},\n      {\"name\":\"좀 긴 이름임니다\", \"content\":\"긴글테스트 긴글긴글 길다길어길어길어 긴글이다 긴글 기이이이일어 길어길어 길면 기차긴글테스트 긴글긴글 길다길어길어길어 긴글이다 긴글 기이이이일어 길어길어 길면 기차\"},\n      {\"name\":\"wonjin\", \"content\":\"오후5시에 해킹\"},\n    ],\n  };\n\n  handleOpen = (name, content) => {\n    this.setState(prevState=>({\n      modalName : name,\n      modalContent : content,\n      modalOpened : true,\n    }));\n  };\n\n  handleClose = () => {\n    this.setState(prevState=>({\n      modalOpened: false\n    }));\n  };\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { doList, modalName, modalContent,  modalOpened } = this.state;\n\n    return (\n      <AppWrap className=\"App\">\n        <Title className=\"title\">Jindo</Title>\n\n        <DoMaker />\n\n        <DoContainer>{ \n          doList.map( (el) => (\n              <Do setModalInfo={this.handleOpen} name={el.name} content={el.content} />\n          )) \n        }</DoContainer>\n\n        <DoModal modalOpened={modalOpened} handleClose={this.handleClose} name={modalName} content={modalContent} />\n\n        <Credit>Wonjin Yi</Credit>\n      </AppWrap>\n    );\n  }\n}\n\n// styled components\nconst AppWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  align-items : center;\n  `;\n\nconst Title = styled.h1`\n  font-size: 5em;\n  text-align: center;\n\n  padding : 20px;\n  border-radius : 5px;\n  background: #fca652;\n  color: #ac4b1c;\n  `;\n\nconst DoContainer = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-contents : center;\n  max-width : 50%;\n\n  padding : 10px;\n  margin : 30px 0; \n  border-radius : 5px;\n\n  background : #ffefa0;\n  `;\n\nconst Credit = styled.p`\n  font-size : 1em;\n  color : #fca652;\n  `;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}