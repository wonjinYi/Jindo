{"version":3,"sources":["components/DoMaker.js","components/Do.js","img/jindodog.png","components/EmptyListNoti.js","components/DoContainer.js","components/PublicBoard.js","components/PrivateBoard.js","components/InfoBoard.js","components/Board.js","components/DoModal.js","components/BoardSelector.js","components/Loading.js","App.js","index.js"],"names":["raro","require","DoMaker","state","name","memo","giveUpdatedFormData","nameValidation","length","memoVliadation","props","updateFormData","this","DoMakerWrap","className","BrownBorderTextField","value","onChange","e","setState","target","id","label","variant","margin","defaultValue","TextValidator","DooButton","onClick","disableElevation","React","Component","withStyles","root","color","borderColor","TextField","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","Button","styled","div","p","Do","giveModalInfo","setModalInfo","DoWrap","DoName","slice","DoMemo","fontWeight","EmptyListNoti","src","jindodog","height","alt","DoContainer","doList","DoContainerWrap","children","i","push","PublicBoard","sessionID","href","infoBoard","Board","boardType","BoardWrap","useStyles","makeStyles","theme","paper","position","maxWidth","shadows","spacing","SimpleModal","modalOpened","handleClose","deleteDo","updatedAt","classes","useState","editmode","setEditmode","modalName","setModalName","modalMemo","setModalMemo","useEffect","parsedUpdatedAt","substring","viewBody","ModalBody","ContentWrap","Name","Memo","Menu","IconButton","editBody","fullWidth","multiline","Modal","open","onClose","IconLabelTabs","updateBoardType","setValue","boardTypeDefine","BoardSelectorWrap","SelectTabs","event","newValue","aria-label","SelectTab","icon","flexGrow","borderRadius","indicator","Tabs","transition","disabled","selected","Tab","backdrop","zIndex","drawer","Loading","Backdrop","CircularProgress","App","isLoading","formData","modalData","modalId","openModal","closeModal","formName","formMemo","updateType","createDo","editDo","type","console","log","getDo","findDoById","targetIndex","findIndex","el","a","axios","get","withCredentials","data","post","targetDo","AppWrap","Title","Credit","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6649b928.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst raro = require(\"raro-number\"); // 53\n\n\nexport default class DoMaker extends React.Component {\n  state = {\n    name : \"\",\n    memo : \"\",\n  };\n\n  giveUpdatedFormData = () => {\n    \n      const { name, memo } = this.state;\n\n      const nameValidation = ( name.length > 0 && name.length <= raro ) ? true : false ;\n      const memoVliadation = ( memo.length > 0 && memo.length <= raro*10 ) ? true : false ;\n\n      if(nameValidation && memoVliadation) {\n        this.props.updateFormData( name, memo, \"create\" );\n      }\n  };\n\n  render() {\n      \n      const { name, memo } = this.state;\n\n      return (\n          <DoMakerWrap className=\"DoMaker\">\n              <BrownBorderTextField value={name} onChange={ (e) => {this.setState( {name:e.target.value} );} } \n                id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" defaultValue=\"WHO\"\n              />\n              <TextValidator>{ ( name.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n              <BrownBorderTextField value={memo} onChange={ (e) => {this.setState( {memo:e.target.value} );} }\n                id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" defaultValue=\"WHAT\"\n              />\n              <TextValidator>{ ( memo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n              <DooButton onClick={this.giveUpdatedFormData} variant=\"contained\" disableElevation><AddCircleOutlineIcon /></DooButton>\n          </DoMakerWrap>\n          \n      );\n  }\n}\n\nconst BrownBorderTextField  = withStyles({\n  root: {\n      margin : '10px 0 0 0',\n      '& label' : {\n          color : '#fca652',\n      },\n      '& label.Mui-focused': {\n          color: '#fca652',\n      },\n      '& .MuiOutlinedInput-root': {\n          '& fieldset': {\n          borderColor: '#fca652',\n          },\n          '&:hover fieldset': {\n          borderColor: '#fca652',\n          },\n          '&.Mui-focused fieldset': {\n          borderColor: '#fca652',\n          },\n      },\n  },\n})(TextField);\n\nconst DooButton = withStyles({\n  root: {\n    margin : '10px 0 0 0',\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: '1.5em',\n    padding: '6px 0',\n    border: 'none',\n    lineHeight: 1.5,\n    color : 'white',\n    backgroundColor: '#fca652',\n    '&:hover': {\n      backgroundColor: '#e0944a',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#e0944a',\n    },\n  },\n})(Button);\n\n//styled-component.\nconst DoMakerWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-contents : center;\n  \n  padding : 0 10px 10px 10px;\n  border-radius : 5px;\n\n  background : #ffefa0;\n  `;\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default class Do extends React.Component {\n\n    state = {\n        giveModalInfo : () => {\n            const { id } = this.props;\n            this.props.setModalInfo(id);\n        }\n    }\n    \n\n    render() {\n        const { name, memo } = this.props;\n\n        return (\n            <DoWrap className=\"Do\">\n                <DoName>{ \n                    (name.length < 20)\n                    ? name\n                    : name.slice(0,20)+ \"...\"\n                }</DoName>\n                <DoMemo variant=\"outlined\" onClick={this.state.giveModalInfo}>{ \n                    (memo.length < 30)\n                        ? memo\n                        : memo.slice(0,30)+ \"...\"\n                }</DoMemo>\n     \n                \n            </DoWrap>\n        );\n    }\n}\n\nconst DoWrap = styled.div`\n    display : flex;\n    `;\n\nconst DoName = withStyles({\n    root: {\n        textTransform: 'none',\n        //overflowWrap: 'break-word',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        fontWeight : 'bold',\n        color : '#4a4a4a',\n        backgroundColor: '#FFD57E',\n        '&:hover': {\n            backgroundColor: '#e3bc6b',\n        },\n        '&:active': {\n            backgroundColor: '#e3bc6b',\n        },\n    },\n})(Button);\n\nconst DoMemo = withStyles({\n    root: {\n\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        //overflowWrap: 'break-word',\n        color : '#4a4a4a',\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#ededed',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#ededed',\n        },\n    },\n})(Button);","export default __webpack_public_path__ + \"static/media/jindodog.c390091a.png\";","import React from 'react';\nimport jindodog from '../img/jindodog.png';\n\nexport default function EmptyListNoti() {\n\n    return (\n        <div className=\"EmptyListNoti\">\n            <img src={jindodog} height=\"300\"alt=\"jindo dog\" />\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n//components\nimport Do from \"./Do\";\nimport EmptyListNoti from \"./EmptyListNoti\";\n\nexport default function DoContainer({setModalInfo, doList}) {\n\n\n    return (\n        <DoContainerWrap>\n        {\n            doList.length > 0\n                ?   (() => {\n                        const children = [];\n                        for (let i = doList.length - 1; i >= 0; i--) {\n                            children.push(<Do key={i} id={doList[i].id} setModalInfo={setModalInfo} name={doList[i].name} memo={doList[i].memo} />);\n                        }\n                        return children;\n                    })()\n                :   <EmptyListNoti />\n        }\n        </DoContainerWrap>\n    );\n}\n\nconst DoContainerWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    `;","// library, frameworks.\nimport React from \"react\";\n//import styled from \"styled-components\";\n\nimport DoContainer from \"./DoContainer\";\n\nexport default function PublicBoard({setModalInfo, doList}) {\n\n    return (\n        <div className=\"PublicBoard\">\n            <DoContainer setModalInfo={setModalInfo} doList={doList} />\n        </div>\n        \n    );\n}\n","// library, frameworks.\nimport React from \"react\";\n//import styled from \"styled-components\";\n\nimport DoContainer from \"./DoContainer\";\n\nexport default function PublicBoard({setModalInfo, doList, sessionID}) {\n\n    return (\n        <div className=\"PublicBoard\">\n            {\n                (() => {\n                    if(sessionID != null){\n                        return ( <DoContainer setModalInfo={setModalInfo} doList={doList} /> );\n                    }\n                    else {\n                        return ( \n                            <a href=\"https://jindoback.wonj.in/login/daldalso\" target=\"_blank\">\n                                <img src=\"https://daldal.so/media/images/oauth-button.png\" />\n                            </a>\n                        );\n                    }\n                })()\n            }\n            \n        </div>\n        \n    );\n}\n","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n\nexport default function infoBoard() {\n\n    return (\n        <div className=\"InfoBoard\">\n            INFO BOARD\n        </div>\n    );\n}\n","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport PublicBoard from \"./PublicBoard\";\nimport PrivateBoard from \"./PrivateBoard\";\nimport InfoBoard from \"./InfoBoard\";\n\n//import DoContainer from \"./DoContainer\";\n\nexport default function Board({setModalInfo, doList, boardType, sessionID}) {\n\n    return (\n        <BoardWrap className=\"Board\">\n            {\n                (() => {\n                    if(boardType == \"public\"){\n                        return ( <PublicBoard setModalInfo={setModalInfo} doList={doList} /> );\n                    }  \n                    else if(boardType == \"private\"){\n                        return ( <PrivateBoard setModalInfo={setModalInfo} doList={doList} sessionID={sessionID}/> );\n                    }\n                    else if(boardType == \"info\"){\n                        return ( <InfoBoard /> );\n                    }\n\n                })()\n            }\n        </BoardWrap>\n        \n    );\n}\n\nconst BoardWrap = styled.div`\n    padding : 10px;\n    margin : 30px 0; \n    border-radius : 5px;\n\n    background : #ffefa0;\n    `;","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { makeStyles, TextField, withStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst raro = require(\"raro-number\"); // 53\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: '80%',\n    backgroundColor : 'rgba(255,255,255,0.8)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst giveUpdatedFormData = (setEditmode, updateFormData, id, modalName, modalMemo) => {\n    const nameValidation = ( modalName.length > 0 && modalName.length <= raro ) ? true : false ;\n    const memoVliadation = ( modalMemo.length > 0 && modalMemo.length <= raro*10 ) ? true : false ;\n\n    if(nameValidation && memoVliadation) {\n        updateFormData( modalName, modalMemo, \"edit\", id);\n        setEditmode(false);\n    } \n}\n\nexport default function SimpleModal({modalOpened, handleClose, deleteDo, updateFormData, id, name, memo, updatedAt}) {\n    const classes = useStyles();\n    \n    const [editmode, setEditmode] = useState(false);\n    const [modalName, setModalName] = useState(name);\n    const [modalMemo, setModalMemo] = useState(memo);\n\n    useEffect( () => { setModalName(name) }, [name])\n    useEffect( () => { setModalMemo(memo) }, [memo])\n\n\n    const parsedUpdatedAt = updatedAt.substring(0,10) + ' ' + updatedAt.substring(11,16);\n\n    const viewBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <p>{ parsedUpdatedAt }</p>\n                <Name>{ modalName }</Name>\n                <Memo>{ modalMemo }</Memo>\n            </ContentWrap>  \n             \n            <Menu>\n                <IconButton onClick={ () => setEditmode(true) }><EditIcon /></IconButton>\n                <IconButton onClick={deleteDo}><DeleteForeverIcon /></IconButton>\n            </Menu>\n        </ModalBody>\n    );\n\n    const editBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <BrownBorderTextField value={modalName} onChange={ (e) => { setModalName(e.target.value) } } \n                    id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" fullWidth\n                />\n                <TextValidator>{ ( modalName.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n                <BrownBorderTextField value={modalMemo} onChange={ (e) => { setModalMemo(e.target.value) } }\n                    id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" multiline fullWidth\n                />\n                <TextValidator>{ ( modalMemo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n            </ContentWrap>  \n            \n            <Menu>\n                <IconButton onClick={ () => { giveUpdatedFormData(setEditmode, updateFormData, id, modalName, modalMemo) } }><CheckCircleOutlineIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); } }><HighlightOffIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); deleteDo(); } }>\n                    <DeleteForeverIcon />\n                </IconButton>\n            </Menu>\n        </ModalBody>\n    )\n\n    return (\n        <div className=\"SimpleModal\">\n            <Modal open={modalOpened} onClose={ () => { setEditmode(false); handleClose(); } }>\n            {\n                editmode\n                ? editBody\n                : viewBody\n            }\n            </Modal>\n        </div>\n    );\n}\n\n\n\nconst ModalBody = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    top : 50%;\n    left : 50%;\n    transform : translate(-50%, -50%);\n\n    min-width : 70%;\n\n    `;\n\nconst ContentWrap = styled.div`\n    width : 100%;\n    max-width : 100%;\n    \n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    align-items : center;\n    `;\nconst Name = styled.p`\n    padding : 10px;\n    \n    text-align : center;\n\n    background : #FFD57E;\n    border-radius : 5px;\n    color : #4a4a4a;\n    font-weight : bold\n    `;\n\nconst Memo = styled.p`\n    background : #FFFFFF;\n    color : #4a4a4a;\n    padding : 10px;\n    border-radius : 5px;\n    word-break: break-all;\n    overflow-wrap: break-word; \n    `;\n\nconst Menu = styled.div`\n    display : flex;\n    `;\n\n\nconst BrownBorderTextField  = withStyles({\n    root: {\n        \n        margin : '16px 0',\n        '& label' : {\n            color : '#fca652',\n        },\n        '& label.Mui-focused': {\n            color: '#fca652',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: '#fca652',\n            },\n            '&:hover fieldset': {\n            borderColor: '#fca652',\n            },\n            '&.Mui-focused fieldset': {\n            borderColor: '#fca652',\n            },\n        },\n    },\n})(TextField);\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React from 'react';\nimport styled from \"styled-components\";\n\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PublicIcon from '@material-ui/icons/Public';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\n\n\nexport default function IconLabelTabs({updateBoardType}) {\n  const [value, setValue] = React.useState(0);\n  const boardTypeDefine = ['public', 'private', 'info'];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    updateBoardType(boardTypeDefine[newValue]);\n  };\n\n  return (\n    <BoardSelectorWrap>\n        <SelectTabs\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n\n          aria-label=\"icon label tabs example\"\n        >\n          <SelectTab icon={<PublicIcon />} label=\"Public\" />\n          <SelectTab icon={<AccountCircleIcon />} label=\"Private\" />\n          <SelectTab icon={<InfoIcon />} label=\"Info\" />\n        </SelectTabs>\n    </BoardSelectorWrap>\n  );\n}\n\nconst BoardSelectorWrap = styled.div`\n  margin-bottom : 30px;\n  \n  `;\n\nconst SelectTabs = withStyles({\n  root: {\n    flexGrow : 1,\n    maxWidth : 500,\n    backgroundColor : '#FFEFA0',\n    borderRadius : '10px',\n    // '& > span': {\n    //   backgroundColor : '#FCA652',\n    // }\n  },\n  indicator : {\n    backgroundColor : '#FCA652',\n  }\n})(Tabs);\n\nconst SelectTab = withStyles({\n  root: {\n    color : '#4A4A4A',\n    backgroundColor : '#FFEFA0',\n    transition : 'background-color 1s',\n    // '&:hover' : {\n    //   backgroundColor : '#fca958',\n    //   color : '#ffffff',\n    //   transition : 'all 0.5s',\n    // },\n\n  },\n  disabled : {\n \n  },\n  selected : {\n    //color : '#ffffff',\n    backgroundColor: '#FCA652',\n  },\n})(Tab);\n\n//https://material-ui.com/components/tabs/","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"Loading\">\n            <Backdrop className={classes.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />  \n            </Backdrop>\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\n// components\n\nimport DoMaker from \"./components/DoMaker\";\nimport Board from \"./components/Board\";\nimport DoModal from \"./components/DoModal\";\nimport BoardSelector from \"./components/BoardSelector\";\n\n\nimport Loading from \"./components/Loading\";\n\n\n// 'App' COMPONENT\nexport default class App extends React.Component {\n\n    state = {\n        isLoading: true,\n\n        formData: {\n            name: \"\",\n            memo: \"\",\n        },\n\n        modalData: {\n            modalId: 0,\n            modalOpened: false,\n        },\n\n        boardType : 'public', // public, private, info\n        doList : [],\n\n        sessionID : null,\n    };\n\n    openModal = (id) => {\n        this.setState({\n            modalData: {\n                modalId: id,\n                modalOpened: true,\n            }\n        });\n    };\n\n    closeModal = () => {\n        this.setState({\n            modalData: {\n                modalId: 0,\n                modalOpened: false,\n            }\n        });\n    };\n\n    updateFormData = (formName, formMemo, updateType, id) => {\n        this.setState({ isLoading: true });\n\n        if (updateType === \"create\") {\n            this.setState(() => ({\n                formData: {\n                    name: formName,\n                    memo: formMemo,\n                }\n            }), this.createDo);\n        }\n        else if (updateType === \"edit\") {\n            this.setState({\n                modalData: {\n                    modalId: id,\n                    modalOpened: true,\n                },\n            }, () => this.editDo(id, formName, formMemo ) );\n        }\n    }\n\n    updateBoardType = (type) => {\n        this.setState({ boardType : type });\n        console.log(\"boardtype : \",type);\n\n        this.setState({ isLoading: true });\n        this.getDo();\n    }\n    \n    findDoById = (modalId) => {\n        const { doList } = this.state;\n\n        const isTarget = (el) => el.id == modalId;\n        const targetIndex = doList.findIndex(isTarget);\n\n        if ( targetIndex != -1 ){\n            const targetDo = doList[targetIndex]\n            return targetDo;\n        } else {\n            const targetDo = {\n                id : 'error',\n                name : 'error',\n                memo : 'error',\n                updatedAt : 'error',\n            };\n            return targetDo;\n        }\n    }\n\n    // API request\n    getDo = async () => {\n        const { boardType } = this.state;\n\n        const { data } = await axios.get(\"https://jindoback.wonj.in/public/data\", { withCredentials: true })\n        console.log(data);\n        this.setState({\n            doList: data,\n            isLoading: false,\n        });\n\n        await axios.get(\"https://jindoback.wonj.in/sessiontest\",  { withCredentials: true })\n    }\n\n    createDo = async () => {\n        const { formData } = this.state;\n        await axios.post(\"https://jindoback.wonj.in/public/create\", formData);\n        await this.getDo();\n    }\n\n    editDo = async (id, name, memo) => {\n        const modalData = {\n            id,\n            name,\n            memo,\n        };\n        \n        await axios.post(\"https://jindoback.wonj.in/public/edit\", modalData);\n\n        await this.getDo();\n    }\n\n    deleteDo = async () => {\n        const { modalData: {\n            modalId\n        } } = this.state;\n\n        this.closeModal();\n        this.setState({\n            isLoading: true,\n        });\n        await axios.post(\"https://jindoback.wonj.in/public/delete\", { id: modalId });\n\n        await this.getDo();\n    }\n\n\n    componentDidMount() {\n        this.getDo();\n    }\n\n\n    render() {\n        const { isLoading, doList, boardType, sessionID, modalData: { modalId, modalOpened } } = this.state;\n\n        const targetDo = this.findDoById(modalId);\n        //console.log('targetDO ',targetDo)\n        \n        return (\n            <AppWrap className=\"App\">\n                <Title className=\"title\">Jindo</Title>\n\n                <BoardSelector updateBoardType={this.updateBoardType} />\n\n                <DoMaker updateFormData={this.updateFormData} />\n\n                <Board setModalInfo={this.openModal} doList={doList} boardType={boardType} sessionID={sessionID} />\n\n                <DoModal    modalOpened={modalOpened} handleClose={this.closeModal} deleteDo={this.deleteDo} updateFormData={this.updateFormData}\n                            id={targetDo.id} name={targetDo.name} memo={targetDo.memo} updatedAt={targetDo.updatedAt}\n                />\n\n                <Credit>Wonjin Yi</Credit>\n\n\n                { isLoading\n                    ? <Loading /> \n                    : ''\n                }\n\n            </AppWrap>\n        );\n    }\n}\n\n// styled components\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n    `;\n\nconst Title = styled.h1`\n    font-size: 5em;\n    text-align: center;\n\n    padding : 20px;\n    border-radius : 5px;\n    background: #fca652;\n    color: #ac4b1c;\n    `;\n\n\n\nconst Credit = styled.p`\n    font-size : 1em;\n    color : #fca652;\n    `;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}