{"version":3,"sources":["components/Do.js","components/DoMaker.js","components/DoModal.js","components/Loading.js","img/jindodog.png","components/EmptyListNoti.js","App.js","index.js"],"names":["Do","state","giveModalInfo","props","id","name","memo","setModalInfo","this","DoWrap","className","DoName","length","slice","DoMemo","variant","onClick","React","Component","styled","div","withStyles","root","textTransform","margin","border","padding","fontWeight","color","backgroundColor","Button","boxShadow","raro","require","DoMaker","giveUpdatedFormData","updateFormData","console","log","DoMakerWrap","BrownBorderTextField","value","onChange","e","setState","target","label","defaultValue","TextValidator","DooButton","disableElevation","borderColor","TextField","fontSize","lineHeight","p","useStyles","makeStyles","theme","paper","position","maxWidth","shadows","spacing","SimpleModal","modalOpened","handleClose","deleteDo","classes","useState","editmode","setEditmode","modalName","setModalName","modalMemo","setModalMemo","useEffect","viewBody","ModalBody","ContentWrap","Name","Memo","Menu","IconButton","editBody","fullWidth","multiline","Modal","open","onClose","backdrop","zIndex","drawer","Loading","Backdrop","CircularProgress","EmptyListNoti","src","jindodog","height","alt","App","isLoading","formData","modalData","modalId","doList","handleOpen","prevState","formName","formMemo","updateType","createDo","editDo","getDo","a","axios","get","data","post","AppWrap","Title","DoContainer","children","i","push","Credit","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.835df204.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default class Do extends React.Component {\n\n    state = {\n        giveModalInfo : () => {\n            const { id, name, memo } = this.props;\n            this.props.setModalInfo(id, name, memo);\n        }\n    }\n    \n\n    render() {\n        const { name, memo } = this.props;\n\n        return (\n            <DoWrap className=\"Do\">\n                <DoName>{ \n                    (name.length < 20)\n                    ? name\n                    : name.slice(0,20)+ \"...\"\n                }</DoName>\n                <DoMemo variant=\"outlined\" onClick={this.state.giveModalInfo}>{ \n                    (memo.length < 30)\n                        ? memo\n                        : memo.slice(0,30)+ \"...\"\n                }</DoMemo>\n     \n                \n            </DoWrap>\n        );\n    }\n}\n\nconst DoWrap = styled.div`\n    display : flex;\n    `;\n\nconst DoName = withStyles({\n    root: {\n        textTransform: 'none',\n        //overflowWrap: 'break-word',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        fontWeight : 'bold',\n        color : '#4a4a4a',\n        backgroundColor: '#FFD57E',\n        '&:hover': {\n            backgroundColor: '#e3bc6b',\n        },\n        '&:active': {\n            backgroundColor: '#e3bc6b',\n        },\n    },\n})(Button);\n\nconst DoMemo = withStyles({\n    root: {\n\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        //overflowWrap: 'break-word',\n        color : '#4a4a4a',\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#ededed',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#ededed',\n        },\n    },\n})(Button);","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst raro = require(\"raro-number\"); // 53\n\n\nexport default class DoMaker extends React.Component {\n  state = {\n    name : \"\",\n    memo : \"\",\n  };\n\n\n\n  giveUpdatedFormData = () => {\n    \n      const { name, memo } = this.state;\n      if(name.length > 0 && memo.length > 0) {\n        this.props.updateFormData( name, memo, \"create\" );\n      }\n  };\n\n\n  render() {\n      \n      const { name, memo } = this.state;\n      console.log(name.length, memo.length);\n      return (\n          <DoMakerWrap className=\"DoMaker\">\n              <BrownBorderTextField value={name} onChange={ (e) => {this.setState( {name:e.target.value} );} } \n                id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" defaultValue=\"WHO\"\n              />\n              <TextValidator>{ ( name.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n              <BrownBorderTextField value={memo} onChange={ (e) => {this.setState( {memo:e.target.value} );} }\n                id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" defaultValue=\"WHAT\"\n              />\n              <TextValidator>{ ( memo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n              <DooButton onClick={this.giveUpdatedFormData} variant=\"contained\" disableElevation><AddCircleOutlineIcon /></DooButton>\n          </DoMakerWrap>\n          \n      );\n  }\n}\n\nconst BrownBorderTextField  = withStyles({\n  root: {\n      margin : '10px 0 0 0',\n      '& label' : {\n          color : '#fca652',\n      },\n      '& label.Mui-focused': {\n          color: '#fca652',\n      },\n      '& .MuiOutlinedInput-root': {\n          '& fieldset': {\n          borderColor: '#fca652',\n          },\n          '&:hover fieldset': {\n          borderColor: '#fca652',\n          },\n          '&.Mui-focused fieldset': {\n          borderColor: '#fca652',\n          },\n      },\n  },\n})(TextField);\n\nconst DooButton = withStyles({\nroot: {\n  margin : '10px 0 0 0',\n  boxShadow: 'none',\n  textTransform: 'none',\n  fontSize: '1.5em',\n  padding: '6px 0',\n  border: 'none',\n  lineHeight: 1.5,\n  color : 'white',\n  backgroundColor: '#fca652',\n  '&:hover': {\n    backgroundColor: '#e0944a',\n    //borderColor: '#0062cc',\n    boxShadow: 'none',\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: '#e0944a',\n    //borderColor: '#005cbf',\n  },\n},\n})(Button);\n\n//styled-component.\nconst DoMakerWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-contents : center;\n  \n  padding : 10px;\n  border-radius : 5px;\n\n  background : #ffefa0;\n  `;\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\n\nimport { makeStyles, TextField, withStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nconst raro = require(\"raro-number\"); // 53\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: '80%',\n    backgroundColor : 'rgba(255,255,255,0.8)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst giveUpdatedFormData = (setEditmode, updateFormData, id, modalName, modalMemo) => {\n    if(modalName.length > 0 && modalMemo.length > 0) {\n        updateFormData( modalName, modalMemo, \"edit\", id);\n        setEditmode(false);\n    }\n     \n}\n\nexport default function SimpleModal({modalOpened, handleClose, deleteDo, updateFormData, id, name, memo}) {\n    const classes = useStyles();\n    \n    const [editmode, setEditmode] = useState(false);\n    const [modalName, setModalName] = useState(name);\n    const [modalMemo, setModalMemo] = useState(memo);\n\n    useEffect( () => { setModalName(name) }, [name])\n    useEffect( () => { setModalMemo(memo) }, [memo])\n\n    const viewBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <Name>{ modalName }</Name>\n                <Memo>{ modalMemo }</Memo>\n            </ContentWrap>  \n             \n            <Menu>\n                <IconButton onClick={ () => setEditmode(true) }><EditIcon /></IconButton>\n                <IconButton onClick={deleteDo}><DeleteForeverIcon /></IconButton>\n            </Menu>\n        </ModalBody>\n    );\n\n    const editBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <BrownBorderTextField value={modalName} onChange={ (e) => { setModalName(e.target.value) } } \n                    id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" fullWidth\n                />\n                <TextValidator>{ ( modalName.length>(raro) ) ? \"↑ 53 Characters or less\" : \"\" }</TextValidator>\n                <BrownBorderTextField value={modalMemo} onChange={ (e) => { setModalMemo(e.target.value) } }\n                    id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" multiline fullWidth\n                />\n                <TextValidator>{ ( modalMemo.length>(raro*10) ) ? \"↑ 530 Characters or less\" : \"\" }</TextValidator>\n            </ContentWrap>  \n            \n            <Menu>\n                <IconButton onClick={ () => { giveUpdatedFormData(setEditmode, updateFormData, id, modalName, modalMemo) } }><CheckCircleOutlineIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); } }><HighlightOffIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); deleteDo(); } }>\n                    <DeleteForeverIcon />\n                </IconButton>\n            </Menu>\n        </ModalBody>\n    )\n\n    return (\n        <div className=\"SimpleModal\">\n            <Modal open={modalOpened} onClose={ () => { setEditmode(false); handleClose(); } }>\n            {\n                editmode\n                ? editBody\n                : viewBody\n            }\n            </Modal>\n        </div>\n    );\n}\n\n\n\nconst ModalBody = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    top : 50%;\n    left : 50%;\n    transform : translate(-50%, -50%);\n\n    min-width : 70%;\n\n    `;\n\nconst ContentWrap = styled.div`\n    width : 100%;\n    max-width : 100%;\n    \n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    align-items : center;\n    `;\nconst Name = styled.p`\n    padding : 10px;\n    \n    text-align : center;\n\n    background : #FFD57E;\n    border-radius : 5px;\n    color : #4a4a4a;\n    font-weight : bold\n    `;\n\nconst Memo = styled.p`\n    background : #FFFFFF;\n    color : #4a4a4a;\n    padding : 10px;\n    border-radius : 5px;\n    word-break: break-all;\n    overflow-wrap: break-word; \n    `;\n\nconst Menu = styled.div`\n    display : flex;\n    `;\n\n\nconst BrownBorderTextField  = withStyles({\n    root: {\n        \n        margin : '16px 0',\n        '& label' : {\n            color : '#fca652',\n        },\n        '& label.Mui-focused': {\n            color: '#fca652',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: '#fca652',\n            },\n            '&:hover fieldset': {\n            borderColor: '#fca652',\n            },\n            '&.Mui-focused fieldset': {\n            borderColor: '#fca652',\n            },\n        },\n    },\n})(TextField);\n\nconst TextValidator = styled.p`\n  color : red;\n  margin : 0;\n  padding : 0;\n  `;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"Loading\">\n            <Backdrop className={classes.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />  \n            </Backdrop>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/jindodog.c390091a.png\";","import React from 'react';\nimport jindodog from '../img/jindodog.png';\n\nexport default function EmptyListNoti() {\n\n    return (\n        <div className=\"EmptyListNoti\">\n            <img src={jindodog} height=\"300\"alt=\"jindo dog\" />\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\n// components\nimport Do from \"./components/Do\";\nimport DoMaker from \"./components/DoMaker\";\nimport DoModal from \"./components/DoModal\";\nimport Loading from \"./components/Loading\";\nimport EmptyListNoti from \"./components/EmptyListNoti\";\n\n// 'App' COMPONENT\nexport default class App extends React.Component {\n\n    state = {\n        isLoading: true,\n\n        formData: {\n            name: \"\",\n            memo: \"\",\n        },\n\n        modalData: {\n            modalId: 0,\n            modalName: '',\n            modalMemo: '',\n            modalOpened: false,\n        },\n\n        doList: [],\n    };\n\n    handleOpen = (id, name, memo) => {\n        this.setState(prevState => ({\n            modalData: {\n                modalId: id,\n                modalName: name,\n                modalMemo: memo,\n                modalOpened: true,\n            }\n\n        }));\n        console.log(this.state.modalData);\n    };\n\n    handleClose = () => {\n        this.setState(prevState => ({\n            modalData: {\n                modalId: 0,\n                modalName: '',\n                modalMemo: '',\n                modalOpened: false\n            }\n        }));\n    };\n\n    updateFormData = (formName, formMemo, updateType, id) => {\n        this.setState({ isLoading: true });\n\n        if (updateType === \"create\") {\n            this.setState(() => ({\n                formData: {\n                    name: formName,\n                    memo: formMemo,\n                }\n            }), this.createDo);\n        }\n        else if (updateType === \"edit\") {\n            this.setState({\n                modalData: {\n                    modalId: id,\n                    modalName: formName,\n                    modalMemo: formMemo,\n                    modalOpened: true,\n                },\n            }, this.editDo);\n        }\n    }\n\n    // API request\n    getDo = async () => {\n        const { data: { data } } = await axios.get(\"https://jindoback.wonj.in/data\");\n        console.log(data);\n        this.setState({\n            doList: data,\n            isLoading: false,\n        });\n    }\n\n    createDo = async () => {\n        const { formData } = this.state;\n        await axios.post(\"https://jindoback.wonj.in/create\", formData);\n        await this.getDo();\n    }\n\n    editDo = async () => {\n        const { modalData } = this.state;\n        \n        console.log(modalData);\n        await axios.post(\"https://jindoback.wonj.in/edit\", modalData);\n\n        await this.getDo();\n    }\n\n    deleteDo = async () => {\n        const { modalData: {\n            modalId\n        } } = this.state;\n\n        this.handleClose();\n        this.setState({\n            isLoading: true,\n        });\n        await axios.post(\"https://jindoback.wonj.in/delete\", { id: modalId });\n\n        await this.getDo();\n    }\n\n\n    componentDidMount() {\n        this.getDo();\n    }\n\n\n    render() {\n        const { isLoading, doList, modalData: { modalId, modalName, modalMemo, modalOpened } } = this.state;\n\n        return (\n            <AppWrap className=\"App\">\n                <Title className=\"title\">Jindo</Title>\n\n                <DoMaker updateFormData={this.updateFormData} />\n\n                <DoContainer>\n                    {\n                        doList.length > 0\n                            ? (() => {\n                                const children = [];\n                                for (let i = doList.length - 1; i >= 0; i--) {\n                                    children.push(<Do key={i} id={doList[i].id} setModalInfo={this.handleOpen} name={doList[i].name} memo={doList[i].memo} />);\n                                }\n                                return children;\n                            })()\n                            : <EmptyListNoti />\n                    }\n                </DoContainer>\n\n                <DoModal modalOpened={modalOpened} handleClose={this.handleClose} deleteDo={this.deleteDo} updateFormData={this.updateFormData} id={modalId} name={modalName} memo={modalMemo} />\n\n                <Credit>Wonjin Yi</Credit>\n\n\n                {\n                    isLoading\n                        ? <Loading /> : ''\n                }\n\n\n            </AppWrap>\n        );\n    }\n}\n\n// styled components\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n    `;\n\nconst Title = styled.h1`\n    font-size: 5em;\n    text-align: center;\n\n    padding : 20px;\n    border-radius : 5px;\n    background: #fca652;\n    color: #ac4b1c;\n    `;\n\nconst DoContainer = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    max-width : 50%;\n\n    padding : 10px;\n    margin : 30px 0; \n    border-radius : 5px;\n\n    background : #ffefa0;\n    `;\n\nconst Credit = styled.p`\n    font-size : 1em;\n    color : #fca652;\n    `;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}