{"version":3,"sources":["components/Do.js","components/DoMaker.js","components/DoModal.js","components/Loading.js","img/jindodog.png","components/EmptyListNoti.js","App.js","index.js"],"names":["Do","state","giveModalInfo","props","id","name","memo","setModalInfo","this","DoWrap","className","DoName","length","slice","DoMemo","variant","onClick","React","Component","styled","div","withStyles","root","textTransform","margin","border","padding","fontWeight","color","backgroundColor","Button","boxShadow","DoMaker","giveUpdatedFormData","updateFormData","DoMakerWrap","BrownBorderTextField","value","onChange","e","setState","target","label","DooButton","disableElevation","borderColor","TextField","fontSize","lineHeight","useStyles","makeStyles","theme","paper","position","maxWidth","shadows","spacing","SimpleModal","modalOpened","handleClose","deleteDo","classes","useState","editmode","setEditmode","modalName","setModalName","modalMemo","setModalMemo","useEffect","viewBody","ModalBody","ContentWrap","Name","Memo","Menu","IconButton","editBody","fullWidth","multiline","Modal","open","onClose","p","backdrop","zIndex","drawer","Loading","Backdrop","CircularProgress","EmptyListNoti","src","jindodog","height","alt","App","isLoading","formData","modalData","modalId","doList","handleOpen","prevState","console","log","formName","formMemo","updateType","createDo","editDo","getDo","a","axios","get","data","post","AppWrap","Title","DoContainer","children","i","push","Credit","h1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.692de386.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, withStyles } from \"@material-ui/core\";\n\nexport default class Do extends React.Component {\n\n    state = {\n        giveModalInfo : () => {\n            const { id, name, memo } = this.props;\n            this.props.setModalInfo(id, name, memo);\n        }\n    }\n    \n\n    render() {\n        const { name, memo } = this.props;\n\n        return (\n            <DoWrap className=\"Do\">\n                <DoName>{ \n                    (name.length < 20)\n                    ? name\n                    : name.slice(0,20)+ \"...\"\n                }</DoName>\n                <DoMemo variant=\"outlined\" onClick={this.state.giveModalInfo}>{ \n                    (memo.length < 30)\n                        ? memo\n                        : memo.slice(0,30)+ \"...\"\n                }</DoMemo>\n     \n                \n            </DoWrap>\n        );\n    }\n}\n\nconst DoWrap = styled.div`\n    display : flex;\n    `;\n\nconst DoName = withStyles({\n    root: {\n        textTransform: 'none',\n        //overflowWrap: 'break-word',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        fontWeight : 'bold',\n        color : '#4a4a4a',\n        backgroundColor: '#FFD57E',\n        '&:hover': {\n            backgroundColor: '#e3bc6b',\n        },\n        '&:active': {\n            backgroundColor: '#e3bc6b',\n        },\n    },\n})(Button);\n\nconst DoMemo = withStyles({\n    root: {\n\n        textTransform: 'none',\n        margin: '5px',\n        border: 'none',\n        padding: '5px',\n        //overflowWrap: 'break-word',\n        color : '#4a4a4a',\n        backgroundColor: 'white',\n        '&:hover': {\n            backgroundColor: '#ededed',\n            boxShadow: 'none',\n        },\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#ededed',\n        },\n    },\n})(Button);","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nexport default class DoMaker extends React.Component {\n  state = {\n    name : \"\",\n    memo : \"\",\n  }\n\n  giveUpdatedFormData = () => {\n    const { name, memo } = this.state;\n    this.props.updateFormData( name, memo, \"create\" );\n  }\n\n\n  render() {\n      const { name, memo } = this.state;\n\n      return (\n          <DoMakerWrap className=\"DoMaker\">\n              <BrownBorderTextField value={name} onChange={ (e) => {this.setState( {name:e.target.value} );} } \n                id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" \n              />\n              <BrownBorderTextField value={memo} onChange={ (e) => {this.setState( {memo:e.target.value} );} }\n                id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" \n              />\n              <DooButton onClick={this.giveUpdatedFormData} variant=\"contained\" disableElevation><AddCircleOutlineIcon /></DooButton>\n          </DoMakerWrap>\n          \n      );\n  }\n}\n\nconst BrownBorderTextField  = withStyles({\n  root: {\n      margin : '0 0 0.5em 0',\n      '& label' : {\n          color : '#fca652',\n      },\n      '& label.Mui-focused': {\n          color: '#fca652',\n      },\n      '& .MuiOutlinedInput-root': {\n          '& fieldset': {\n          borderColor: '#fca652',\n          },\n          '&:hover fieldset': {\n          borderColor: '#fca652',\n          },\n          '&.Mui-focused fieldset': {\n          borderColor: '#fca652',\n          },\n      },\n  },\n})(TextField);\n\nconst DooButton = withStyles({\nroot: {\n  boxShadow: 'none',\n  textTransform: 'none',\n  fontSize: '1.5em',\n  padding: '6px 0',\n  border: 'none',\n  lineHeight: 1.5,\n  color : 'white',\n  backgroundColor: '#fca652',\n  '&:hover': {\n    backgroundColor: '#e0944a',\n    //borderColor: '#0062cc',\n    boxShadow: 'none',\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: '#e0944a',\n    //borderColor: '#005cbf',\n  },\n},\n})(Button);\n\n//styled-component.\nconst DoMakerWrap = styled.div`\n  display : flex;\n  flex-direction : column;\n  justify-contents : center;\n  \n  padding : 10px;\n  border-radius : 5px;\n\n  background : #ffefa0;\n  `;","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\n\nimport { makeStyles, TextField, withStyles } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: '80%',\n    backgroundColor : 'rgba(255,255,255,0.8)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst giveUpdatedFormData = (setEditmode, updateFormData, id, modalName, modalMemo) => {\n    updateFormData( modalName, modalMemo, \"edit\", id);\n    setEditmode(false); \n}\n\nexport default function SimpleModal({modalOpened, handleClose, deleteDo, updateFormData, id, name, memo}) {\n    const classes = useStyles();\n    \n    const [editmode, setEditmode] = useState(false);\n    const [modalName, setModalName] = useState(name);\n    const [modalMemo, setModalMemo] = useState(memo);\n\n    useEffect( () => { setModalName(name) }, [name])\n    useEffect( () => { setModalMemo(memo) }, [memo])\n\n    const viewBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <Name>{ modalName }</Name>\n                <Memo>{ modalMemo }</Memo>\n            </ContentWrap>  \n             \n            <Menu>\n                <IconButton onClick={ () => setEditmode(true) }><EditIcon /></IconButton>\n                <IconButton onClick={deleteDo}><DeleteForeverIcon /></IconButton>\n            </Menu>\n        </ModalBody>\n    );\n\n    const editBody = (\n        <ModalBody className={classes.paper}>\n            <ContentWrap>\n                <BrownBorderTextField value={modalName} onChange={ (e) => { setModalName(e.target.value) } } \n                    id=\"input-name\" label=\"Who\" variant=\"outlined\" margin=\"dense\" fullWidth\n                />\n                <BrownBorderTextField value={modalMemo} onChange={ (e) => { setModalMemo(e.target.value) } }\n                    id=\"input-memo\" label=\"What\" variant=\"outlined\" margin=\"dense\" multiline fullWidth\n                />\n            </ContentWrap>  \n            \n            <Menu>\n                <IconButton onClick={ () => { giveUpdatedFormData(setEditmode, updateFormData, id, modalName, modalMemo) } }><CheckCircleOutlineIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); } }><HighlightOffIcon /></IconButton>\n                <IconButton onClick={ () => { setEditmode(false); deleteDo(); } }>\n                    <DeleteForeverIcon />\n                </IconButton>\n            </Menu>\n        </ModalBody>\n    )\n\n    return (\n        <div className=\"SimpleModal\">\n            <Modal open={modalOpened} onClose={ () => { setEditmode(false); handleClose(); } }>\n            {\n                editmode\n                ? editBody\n                : viewBody\n            }\n            </Modal>\n        </div>\n    );\n}\n\n\n\nconst ModalBody = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : flex-end;\n    top : 50%;\n    left : 50%;\n    transform : translate(-50%, -50%);\n\n    min-width : 70%;\n\n    `;\n\nconst ContentWrap = styled.div`\n    width : 100%;\n    max-width : 100%;\n    \n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    align-items : center;\n    `;\nconst Name = styled.p`\n    padding : 10px;\n    \n    text-align : center;\n\n    background : #FFD57E;\n    border-radius : 5px;\n    color : #4a4a4a;\n    font-weight : bold\n    `;\n\nconst Memo = styled.p`\n    background : #FFFFFF;\n    color : #4a4a4a;\n    padding : 10px;\n    border-radius : 5px;\n    word-break: break-all;\n    overflow-wrap: break-word; \n    `;\n\nconst Menu = styled.div`\n    display : flex;\n    `;\n\n\nconst BrownBorderTextField  = withStyles({\n    root: {\n        \n        margin : '16px 0',\n        '& label' : {\n            color : '#fca652',\n        },\n        '& label.Mui-focused': {\n            color: '#fca652',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: '#fca652',\n            },\n            '&:hover fieldset': {\n            borderColor: '#fca652',\n            },\n            '&.Mui-focused fieldset': {\n            borderColor: '#fca652',\n            },\n        },\n    },\n})(TextField);","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Loading() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"Loading\">\n            <Backdrop className={classes.backdrop} open={true}>\n                <CircularProgress color=\"inherit\" />  \n            </Backdrop>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/jindodog.c390091a.png\";","import React from 'react';\nimport jindodog from '../img/jindodog.png';\n\nexport default function EmptyListNoti() {\n\n    return (\n        <div className=\"EmptyListNoti\">\n            <img src={jindodog} height=\"300\"alt=\"jindo dog\" />\n        </div>\n    );\n}","// library, frameworks.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\n\n// components\nimport Do from \"./components/Do\";\nimport DoMaker from \"./components/DoMaker\";\nimport DoModal from \"./components/DoModal\";\nimport Loading from \"./components/Loading\";\nimport EmptyListNoti from \"./components/EmptyListNoti\";\n\n// 'App' COMPONENT\nexport default class App extends React.Component {\n\n    state = {\n        isLoading: true,\n\n        formData: {\n            name: \"\",\n            memo: \"\",\n        },\n\n        modalData: {\n            modalId: 0,\n            modalName: '',\n            modalMemo: '',\n            modalOpened: false,\n        },\n\n        doList: [],\n    };\n\n    handleOpen = (id, name, memo) => {\n        this.setState(prevState => ({\n            modalData: {\n                modalId: id,\n                modalName: name,\n                modalMemo: memo,\n                modalOpened: true,\n            }\n\n        }));\n        console.log(this.state.modalData);\n    };\n\n    handleClose = () => {\n        this.setState(prevState => ({\n            modalData: {\n                modalId: 0,\n                modalName: '',\n                modalMemo: '',\n                modalOpened: false\n            }\n        }));\n    };\n\n    updateFormData = (formName, formMemo, updateType, id) => {\n        this.setState({ isLoading: true });\n\n        if (updateType === \"create\") {\n            this.setState(() => ({\n                formData: {\n                    name: formName,\n                    memo: formMemo,\n                }\n            }), this.createDo);\n        }\n        else if (updateType === \"edit\") {\n            this.setState({\n                modalData: {\n                    modalId: id,\n                    modalName: formName,\n                    modalMemo: formMemo,\n                    modalOpened: true,\n                },\n            }, this.editDo);\n        }\n    }\n\n    // API request\n    getDo = async () => {\n        const { data: { data } } = await axios.get(\"https://jindoback.wonj.in/data\");\n        console.log(data);\n        this.setState({\n            doList: data,\n            isLoading: false,\n        });\n    }\n\n    createDo = async () => {\n        const { formData } = this.state;\n        await axios.post(\"https://jindoback.wonj.in/create\", formData);\n        await this.getDo();\n    }\n\n    editDo = async () => {\n        const { modalData } = this.state;\n        \n        console.log(modalData);\n        await axios.post(\"https://jindoback.wonj.in/edit\", modalData);\n\n        await this.getDo();\n    }\n\n    deleteDo = async () => {\n        const { modalData: {\n            modalId\n        } } = this.state;\n\n        this.handleClose();\n        this.setState({\n            isLoading: true,\n        });\n        await axios.post(\"https://jindoback.wonj.in/delete\", { id: modalId });\n\n        await this.getDo();\n    }\n\n\n    componentDidMount() {\n        this.getDo();\n    }\n\n\n    render() {\n        const { isLoading, doList, modalData: { modalId, modalName, modalMemo, modalOpened } } = this.state;\n\n        return (\n            <AppWrap className=\"App\">\n                <Title className=\"title\">Jindo</Title>\n\n                <DoMaker updateFormData={this.updateFormData} />\n\n                <DoContainer>\n                    {\n                        doList.length > 0\n                            ? (() => {\n                                const children = [];\n                                for (let i = doList.length - 1; i >= 0; i--) {\n                                    children.push(<Do key={i} id={doList[i].id} setModalInfo={this.handleOpen} name={doList[i].name} memo={doList[i].memo} />);\n                                }\n                                return children;\n                            })()\n                            : <EmptyListNoti />\n                    }\n                </DoContainer>\n\n                <DoModal modalOpened={modalOpened} handleClose={this.handleClose} deleteDo={this.deleteDo} updateFormData={this.updateFormData} id={modalId} name={modalName} memo={modalMemo} />\n\n                <Credit>Wonjin Yi</Credit>\n\n\n                {\n                    isLoading\n                        ? <Loading /> : ''\n                }\n\n\n            </AppWrap>\n        );\n    }\n}\n\n// styled components\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n    `;\n\nconst Title = styled.h1`\n    font-size: 5em;\n    text-align: center;\n\n    padding : 20px;\n    border-radius : 5px;\n    background: #fca652;\n    color: #ac4b1c;\n    `;\n\nconst DoContainer = styled.div`\n    display : flex;\n    flex-direction : column;\n    justify-contents : center;\n    max-width : 50%;\n\n    padding : 10px;\n    margin : 30px 0; \n    border-radius : 5px;\n\n    background : #ffefa0;\n    `;\n\nconst Credit = styled.p`\n    font-size : 1em;\n    color : #fca652;\n    `;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}